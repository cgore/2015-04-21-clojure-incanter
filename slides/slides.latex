% Copyright (c) 2015, Christopher Mark Gore,
% Soli Deo Gloria,
% All rights reserved.
%
% 2317 South River Road, Saint Charles, Missouri 63303 USA.
% Web: http://cgore.com
% Email: cgore@cgore.com
%
% Redistribution and use in source and binary forms, with or without
% modification, are permitted provided that the following conditions are met:
%
%     * Redistributions of source code must retain the above copyright
%       notice, this list of conditions and the following disclaimer.
%
%     * Redistributions in binary form must reproduce the above copyright
%       notice, this list of conditions and the following disclaimer in the
%       documentation and/or other materials provided with the distribution.
%
%     * Neither the name of Christopher Mark Gore nor the names of other
%       contributors may be used to endorse or promote products derived from
%       this software without specific prior written permission.
%
% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
% AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
% IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
% ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
% LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
% CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
% SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
% INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
% CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
% ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
% POSSIBILITY OF SUCH DAMAGE.

\documentclass{seminar}

\usepackage{fixltx2e} % Bugfixes for LaTeX 2e
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{amsthm}
\usepackage[normalem]{ulem}
\usepackage{graphicx}
\usepackage[usenames,dvipsnames]{xcolor}
\usepackage{librebaskerville} % Baskerville font
\usepackage{amsfonts}
\usepackage{listings}
\usepackage[dvips]{pstricks}
\usepackage{relsize}
\usepackage{textcomp}
\usepackage[normalem]{ulem}
\usepackage{wasysym}


\usepackage{semcolor,slidesec}
\input{seminar.bug}
\input{seminar.bg2}
% \input{seminar.bg3} % TODO: why is this missing on OSX?

\definecolor{fillcolor}{rgb}{0.9,0.95,1.0}
\definecolor{linecolor}{rgb}{0.8,0.85,0.9}
\slideframe[\psset{fillcolor=fillcolor,linecolor=linecolor}]{scshadow}

\newcommand{\hc}{Blue}
\newcommand{\h}[1]{\slideheading{\textcolor{\hc}{#1}}}
\newcommand{\tq}[1]{\textcolor{Green}{\textbf{#1}}}
\newcommand{\tbd}[1]{\textcolor{Blue}{\textit{#1}}}
\newcommand{\TODO}{{\Huge \textcolor{Red}{\textbf{{TO DO}}}}}

\definecolor{commentcolor}{rgb}{0.1,0.1,0.8}
\definecolor{identifiercolor}{rgb}{0.2,0.2,0.2}
\definecolor{keywordcolor}{rgb}{0.1,0.3,0.1}
\definecolor{cexcolor}{rgb}{0.25,0.25,0.4}
\lstset{
  basicstyle=\small\ttfamily,
  language=Lisp,
  morekeywords={make-instance},
  escapeinside={\%*}{*)},
  commentstyle=\itshape\color{commentcolor},
  identifierstyle=\color{identifiercolor},
  keywordstyle=\color{keywordcolor},
  upquote=true
}
\newcommand{\cex}[1]{\textcolor{cexcolor}{\textit{#1}}}

\newcommand{\fullSlideImage}[1]{
  \begin{center}
    \includegraphics[width=4in,height=2.5in,keepaspectratio=true]{#1}
  \end{center}
}

\title{\psshadowbox{Clojure Incanter}}
\author{Christopher Mark Gore\\
  \texttt{cgore.com}}
\date{Tuesday, April 28, {\smaller AD} 2015} % textsc doesn't seem to work for Baskerville.

\begin{document}

\raggedslides[0mm]


\begin{slide}
  \color{\hc}

  \begin{center}
    \includegraphics[height=1.25in]{STLClojure.eps}
  \end{center}

  \maketitle

  \color{Black}
\end{slide}


\begin{slide}
  \h{Why Incanter?}

  \begin{itemize}
  \item charts
  \item statistics
  \item data
  \item graphics
  \item don't have to use R or MATLAB!
  \end{itemize}
\end{slide}


\begin{slide}
  \h{Getting Started: Your \texttt{project.clj}}

\begin{lstlisting}
:dependencies [... [incanter "1.5.6"] ...]
\end{lstlisting}

  \h{Getting Started: Your Namespace Declaration}

\begin{lstlisting}
(ns code.core
  "Howdy Incanter!"
  (:require [incanter.core :as i
             :refer [$ conj-cols conj-rows dataset
                     dim to-dataset view]]
            [incanter.stats :as is]
            [incanter.charts :as ic
                             :refer [histogram]]
            [incanter.io :as iio
                         :refer [read-dataset]]))
\end{lstlisting}
\end{slide}


\begin{slide}
  \h{Sine Waves}

\begin{lstlisting}
(view (ic/function-plot #(Math/sin %) -4 4
                        :y-label "sin(x)"))
\end{lstlisting}

  \begin{center}
    \includegraphics[height=2in]{sine-wave.eps}
  \end{center}
\end{slide}


\begin{slide}
  \h{Data Sets}

  You probably want to look at data if you are interested in Incanter.
  For a really small data set, you might just define it inline.

\begin{lstlisting}
(def small-data (dataset ["x" "y" "theta"]
                          [[1   2   3]
                           [4   5   6]
                           [7   8   9]]))
\end{lstlisting}
\end{slide}


\begin{slide}
  \h{Data Sets from CSVs}

  If you are working with a real data set, then it's probably living in a CSV
  file or a database.

\begin{lstlisting}
(def pass-data (read-dataset "../Pass.csv"
                             :header true))
(def fail-data (read-dataset "../Pass.csv"
                             :header true))
\end{lstlisting}
\end{slide}


\begin{slide}
  \h{Data Sets from Hash Maps}

  Clojure \emph{loves} hash maps.
  How do you make a data set out of them?

\begin{lstlisting}
(def data-from-hashmaps (to-dataset [{:x 1 :y 2}
                                     {:x 3 :y 4}
                                     {:x 5 :y 6}]))
\end{lstlisting}
\end{slide}


\begin{slide}
  \h{Data Sets from Vectors}

\begin{lstlisting}
(def data-from-vecs (to-dataset [[1 2 3]
                                 [4 5 6]
                                 [7 8 9]]))
(def data-cols (conj-cols [1 4 7]
                          [2 5 8]
                          [3 6 9]))
(def data-rows (conj-rows [1 2 3]
                          [4 5 6]
                          [7 8 9]))
\end{lstlisting}
\end{slide}


\begin{slide}
  \h{Datasets from the Internet}

  There's no need to download the CSV, if you know the path to it.

\begin{lstlisting}
(def air-passengers
  (read-dataset
   (str "http://vincentarelbundock.github.io"
        "/Rdatasets/csv/datasets/AirPassengers.csv")
   :header true))
\end{lstlisting}
\end{slide}


\begin{slide}
  \h{The \texttt{\$} Operator}

  The \texttt{\$} operator is a shortcut to get that column of data out of a dataset.

\begin{lstlisting}
(defn x [dataset]
  ($ :x dataset))
(defn y [dataset]
  ($ :y dataset))
(defn theta [dataset]
  ($ :theta dataset))
(defn mpi [dataset]
  ($ (keyword "Monthly Personal Income") dataset))
\end{lstlisting}
\end{slide}


\begin{slide}
  \h{Histograms}

  What's my data look like?

\begin{lstlisting}
(let [mpi-filtered (filter #(< 0 %) (mpi pass-data))
      mpi-log10 (map #(Math/log10 %) mpi-filtered)]
  (view (histogram mpi-log10
                   :x-label "Monthly Personal Income"
                   :nbins 50)))
\end{lstlisting}
\end{slide}


\begin{slide}
  \h{Histograms}

  \fullSlideImage{histogram.eps}
\end{slide}


\begin{slide}
  \begin{center}
    \textcolor{\hc}{\textbf{\emph{\Huge{Questions?}}}}
  \end{center}
\end{slide}


\end{document}
